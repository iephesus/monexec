// Code generated by go-bindata.
// sources:
// ../ui/dist/index.html
// ../ui/dist/main.js
// DO NOT EDIT!

package plugins

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8f\xb1\x8e\xc2\x30\x0c\x86\x5f\xc5\x97\xfd\x2e\xeb\x0d\x8e\x97\x3b\xd8\x10\x0c\x65\x60\x0c\x89\x45\x53\xb5\x69\x15\x9b\xa8\x7d\x7b\x54\x5a\x31\xd9\xdf\x27\xd9\xbf\x7e\xfc\xfa\x3f\xff\x35\xb7\xcb\x01\x5a\x1d\x7a\x02\x5c\x07\xf4\x3e\x3f\x1c\xe7\x15\xd9\x47\x02\x1c\x58\x3d\x84\xd6\x17\x61\x75\xd7\xe6\xf8\xfd\x4b\x80\x9a\xb4\x67\x3a\x8d\x99\x67\x0e\x68\x37\x04\xb4\xfb\xcd\x7d\x8c\x0b\x01\xc6\x54\x21\x45\x27\xcf\x89\x4b\x4d\x32\x16\x21\xb4\x31\x55\x02\x94\x50\xd2\xa4\xa0\xcb\xc4\xce\x28\xcf\x6a\x3b\x5f\xfd\x66\x0d\x48\x09\xce\x0c\x3e\xe5\x9f\x4e\x0c\xa1\xdd\x3c\xa1\xdd\x1f\x7f\x78\x5f\xd6\xe4\x77\x87\x57\x00\x00\x00\xff\xff\x65\x5a\x0d\x38\xd4\x00\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 212, mode: os.FileMode(420), modTime: time.Unix(1530190485, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mainJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7c\xfd\x92\xdb\x36\x92\xf8\xab\x48\xac\x2c\x0b\x28\xf7\x30\x92\x93\x54\xe5\x47\x06\x99\x9f\xe3\x38\x1b\x27\x8e\xed\xf8\x23\xc9\xee\x9c\x6a\x16\x22\x21\x09\x1e\x0a\xa0\x41\x68\x3e\x22\xf1\xfe\xbe\xa7\xb8\xba\x67\xb9\x47\xb9\x27\xb9\x02\xc0\x0f\x90\xe2\x8c\xc7\xbb\xa9\xab\xdb\xaa\x4b\xb9\x34\x54\x7f\x01\xdd\x68\x34\xba\x9b\x50\xa6\xab\x9d\x48\x35\x97\x02\x69\xbc\xbf\xa4\x6a\xc2\xc8\xbe\x4a\x1a\xe0\x44\xa0\x14\xef\xf9\x0a\xb1\xb3\x74\x81\x15\xd3\x3b\x25\x26\xe6\x39\x62\xd7\x85\x54\xba\x4c\x0c\x8b\x22\x06\x44\xf6\x3c\x4e\x21\x8f\xa7\x73\xa8\x91\xf1\xbe\xaa\x92\x9a\x49\x1b\xa6\x94\xe6\x39\x52\x0d\x2f\x28\xe8\x9e\x05\x06\x15\xe5\x64\x3a\xeb\x60\x95\x88\xb6\x44\x83\x88\x52\xc2\x40\x44\x19\xe9\xa6\x0a\x0c\x52\xbc\x17\x91\x34\x8f\xf8\x70\x78\xb1\x7c\xc7\x52\x1d\x65\x6c\xc5\x05\x7b\xa9\x64\xc1\x94\xbe\xb1\x64\x7b\x26\x76\x5b\xa6\xe8\x32\x67\xf1\x74\x06\x6b\xa6\xe3\xb4\xc2\x15\x88\x48\x11\x5f\xf5\x60\x27\x1c\x77\x16\x4c\x89\xbe\x29\x98\x5c\x4d\x5e\xdf\x6c\x97\x32\x0f\x43\xf7\x37\xd2\xf2\xb5\x56\x5c\xac\xdf\xd0\x75\x18\xde\x36\xe2\x31\x2d\xec\x2f\x69\xbe\x63\x71\xf0\x93\xcc\x76\x39\x0b\x2a\x0c\xb7\x31\x07\xe7\xe7\xac\xac\xc9\x1a\xb6\xe9\xcc\x4d\x57\xf7\xd4\xb7\x8b\x32\x0f\x59\x18\x22\x4d\x8c\x02\x18\xbe\x0c\x59\xb3\x42\x3a\xe1\x2b\xf4\xb9\xc1\x06\xd2\x0e\x15\x90\x46\x27\x1d\x86\xe6\x5f\xd4\x8d\xd4\x31\x99\xb5\x4c\x49\x3d\xb9\x54\x31\xaa\x19\x12\xbb\x3c\xc7\x46\x9c\x88\x14\x4a\x6f\x9b\x7a\x0a\x41\xc6\x56\x74\x97\xeb\x60\x68\x71\xa7\x85\xae\x30\x3c\xb4\x13\x2a\xad\x5d\x3a\x23\x6b\xbc\x92\x0a\x59\x37\x9a\x70\x31\xd1\x58\x44\x19\x4a\x41\x41\xab\x2e\xc3\xfb\xd6\x89\xd8\xa2\x8a\x96\x5c\x64\x76\x5e\xa0\x30\x6e\xfc\x2b\x35\x36\x12\xe4\xd8\x9b\x07\xda\x9e\xb6\x14\x9d\xd4\xa8\x9e\x7b\x15\x8f\x20\x5b\x0f\x36\xf3\x62\x10\xd0\x00\x18\x06\x66\x86\x93\x83\x25\xa9\x09\x6b\x13\x15\x4a\x6a\x69\x94\x8c\x36\xb4\x7c\x71\x25\x1a\x63\xb9\x5d\x60\x18\x8c\x8c\x82\x04\x01\x08\x24\xa2\x92\x7c\x8e\x2b\x74\xd6\xf3\x71\x61\xfc\xb2\x64\x13\x63\xb3\x54\x07\xdd\xb6\x4c\x11\xde\x57\xed\x37\xe5\x86\x6f\xec\x28\x8c\x1d\x19\xd6\x67\x62\x41\xd8\x99\x58\xb4\x5b\xb0\xe3\x90\xb7\x73\xcc\x47\xc8\xb9\x23\xd7\x11\x2d\x0a\x26\xb2\xc7\x1b\x9e\x67\x88\xe1\x8e\xa0\x6c\xa6\xab\x23\x2e\x4a\xa6\xf4\x37\x6c\x25\x15\x43\x06\xd6\x51\x51\xb3\x2a\x3a\x2a\xa8\x62\x42\x3f\x97\x19\x8b\x14\xdb\xca\x4b\xe6\xe4\x69\x8f\x72\x39\x98\x1f\x99\x25\xe2\x2b\x1d\xe5\x4c\xac\xf5\x26\x11\x0f\xc8\xdc\x4e\x36\x0c\xcd\x67\xd4\x9f\xcb\xce\x8c\x52\xeb\x90\xc9\x74\xb7\x65\xa2\xf1\xe6\x27\x39\x33\xdf\x7a\x43\xad\x6e\x27\x7f\xc3\xae\xed\x34\x7b\xf4\x39\xba\x8d\xfc\xb1\xdc\x5a\xe9\x41\xe0\x91\xaf\x9d\x65\x4c\xb8\xd2\x11\xcd\xb2\x27\x97\x4c\xe8\x67\xbc\xd4\x4c\x30\x85\x1c\xa6\xa3\xce\x7c\x6a\x67\x9c\xbb\x19\xb6\xcd\xca\x64\x54\x53\x12\x04\x0f\x58\x87\xdb\x74\x8b\x52\xea\x9b\x9c\x45\x25\xd3\xed\x8e\xb5\x2b\x53\xbb\xf4\xbb\x00\x8e\x1d\xff\xba\xc2\x50\xe3\xf3\x31\xfc\xf3\x0e\x2f\xc7\xf0\x6f\x3b\xfc\xc5\x18\xfe\x45\x87\x5f\x8e\xe1\x79\x87\xdf\x8e\xe1\xcb\x0e\xcf\xc7\xf0\xb4\xc3\x6f\xc6\xf0\xcb\x0e\xbf\x1a\xc3\xef\x3a\xfc\x7a\x0c\xbf\xea\xf0\x6c\x0c\x9f\x77\x78\x3a\x86\x5f\x77\xf8\x62\x0c\x9f\x75\xf8\xf7\x63\xf8\x6d\x87\x57\x63\xf8\x4d\x87\x17\x63\xf8\xb4\xc3\xa7\x63\x78\xd5\xe1\xb3\x31\xbc\xac\x70\x92\x33\x3d\x79\xd7\xcb\x17\x5e\x38\x7f\xb4\x9b\x16\x52\xc2\x22\x2d\x2f\x98\xe8\x91\x98\xd8\x23\x40\x02\x77\x89\x85\xa3\x98\x12\x92\xd6\x07\x51\x62\xc2\x42\x29\xf3\x4b\x96\x11\x19\x86\xfb\x33\xb9\x88\x79\x95\xa4\x52\x94\x7a\x52\x12\x85\x14\xda\x57\xc0\xa2\x54\x5f\x63\xe8\x68\x31\x50\x13\xeb\x11\x8b\xd2\x9d\x32\x01\x86\x68\x6c\xbe\xc8\x6d\x21\x05\x13\x1a\x4a\x9c\xb0\x68\x99\xcb\xf4\xc2\x52\xd9\xa7\xf2\xb4\x79\x88\x56\x52\x3d\xa1\xe9\x06\x21\x0d\x29\x26\x5f\xef\xd3\x29\x21\xc2\x1e\x96\xe8\x5d\x2b\x72\xaf\xd8\x96\x72\xc1\xc5\x3a\x9e\x81\x89\xe3\x4b\x9a\x5e\x94\xf1\xd9\xa2\x02\x1d\x49\x84\x0c\xa3\x8e\x32\x34\x37\x33\x73\x82\x4d\x66\x64\x0e\xab\x0a\xe3\x0a\xc7\x35\xd4\x91\xd0\x28\x45\x18\xe8\x19\x8d\xf8\x69\xc0\x83\x38\xd8\x06\x0b\xc4\xa2\xad\xdc\x09\x8d\x8c\x04\x2a\xd2\x8d\x54\xe6\xa9\x55\x23\x52\x52\x6a\xb3\x93\xd1\xbe\xc2\xed\x28\x84\xb6\xe3\x79\xca\x99\x70\x4e\x71\xc5\x57\x08\x09\xa2\x71\x18\x06\xcd\x22\x74\xf9\x80\x88\xf4\x86\x09\xbb\x14\xda\x3e\x22\x4d\xbe\xde\x4b\xb3\x2e\x1b\x26\x60\x0e\x2c\xb2\x27\x38\x68\x5c\x41\x83\x4a\xa9\x4e\x37\xf0\x10\x58\xc4\x94\x92\xca\xe0\xec\x24\x9d\x95\xa6\x84\xb0\xc8\x9c\x13\x5c\xac\x9b\xe4\xc2\x70\xd5\x20\x98\x61\x98\xce\x2a\x96\x97\xcc\x39\x80\xcf\x66\x27\xe3\xf1\x1c\x4d\x02\xa6\x33\xdf\x41\xf6\x67\x35\x6a\x11\xeb\xaa\xea\x62\x5f\x81\x86\xc7\xb1\x9f\xcf\x74\x74\x97\xf6\x48\xda\xf0\x32\xca\x58\xa9\x95\xbc\x21\x29\xd8\xaf\x2b\xae\x18\x0a\x6a\x60\x80\x1d\xb0\x64\xba\xc1\x9f\xaf\x14\x5d\xdb\xe0\x9f\xa1\xe9\x7c\x4a\x88\xc6\x03\x84\x5d\xf5\x1a\x56\x6a\xaa\x4d\x62\xdd\x0d\x7c\xde\x4b\x19\xf4\x94\xe8\x53\x46\x08\x8b\xad\x19\x0e\x07\x3d\x96\xba\x1d\x0e\x23\x0b\xe8\x1d\xd3\x37\xde\xe6\x23\xda\x66\x53\x76\xf4\x0d\x15\x59\xce\x54\x19\x86\xfd\xef\x67\x7a\x11\x95\x39\x4f\x19\x72\x19\x5e\x9b\x89\xa5\x64\x96\xa4\x5f\x89\xe6\xbc\x4d\xcd\x79\xbb\x77\x99\xbe\x38\x4b\x17\x86\x78\xaa\xa2\xf3\x73\xb3\x03\xcc\x22\x6b\x75\xb3\xf7\xbe\xbb\x2c\xde\xa5\x39\x1b\x5e\x9a\x4c\x67\xc5\x05\xcd\xf3\x01\xd5\xdc\x5f\xb1\x6b\x97\x1c\x9c\x5b\x77\x9e\xce\xe0\x31\xd2\xd1\xf9\xd2\xa6\x11\x6e\xe9\xb0\x03\x49\xd1\xfb\x4a\x57\x9a\xa9\x06\xd2\xb2\xcf\x3b\xb9\x17\x5e\x2e\xd7\xad\x45\x87\x7f\xde\x9c\xa0\xad\x59\x48\x81\xac\xa8\x32\x97\xba\xfd\x62\x92\x4e\xc2\xdc\x5f\x8b\xd4\x74\x6d\xfc\xcf\x6e\xfc\xc2\x48\x2a\x09\x03\xb7\x3d\x09\xb3\x7f\x0e\x07\x0d\xe6\xe8\x95\x8a\x11\xe6\xfe\x1e\x0e\xcd\x06\x36\xdf\xa0\xa1\x1b\xaa\x4a\xce\x16\xe0\xa9\x5a\x7f\xf5\x54\x25\x67\x0b\xcf\x89\xdf\xf4\xd6\x7d\xb8\xc4\x46\xfc\x10\x66\xf8\xbb\xbc\xb6\xd8\x95\x1b\xc4\x30\xec\x53\x2a\x52\x96\xfb\x59\xb0\x91\xa9\x89\x88\xb8\xc8\xd8\xf5\x8b\x15\x62\x38\xf9\x57\x1d\x86\x22\x2a\x0b\xeb\x38\x1a\xe6\xd8\x5f\xc5\xab\x76\x3f\x9d\x9b\x18\x65\x43\xb5\x29\x4e\x2c\xc8\x6a\x6e\x57\xe8\x70\xb8\x46\x2d\xc8\xd3\xe4\x99\x97\xb7\x77\x8b\x05\xe6\x00\x81\x94\x4c\xe7\x49\xe3\xa1\xd2\x7a\x37\x51\xa8\x25\x5b\xb3\x0c\xda\x3d\xe8\xad\x0e\x76\x90\x8c\xaf\x56\x4c\x95\x48\x9f\xc9\x05\xb0\x33\xb9\xc0\x61\x88\xc4\x99\x5c\x90\x94\x4c\x67\x38\x49\x4d\x25\xe5\xed\xd5\xe6\x98\xc1\x9d\x50\xc5\x4c\x14\xde\x99\x20\xe2\x6f\xeb\x06\x6d\x3c\xa3\xd9\x61\xae\x44\x19\xa3\x6a\xa2\x43\x33\x9c\x8b\x33\x96\x24\x80\x7d\xba\xa1\x62\xcd\xb2\x58\x40\x1d\x14\x63\xdf\x0c\x85\x62\x97\x5c\xee\xca\x98\x55\x43\x71\x51\x31\x3a\x9c\x93\xbe\x2b\xb2\x8f\x15\x8f\xbd\x45\x79\x65\x33\xe4\xa1\xa5\x3b\xfc\x63\x83\x37\x0b\x93\xd8\x5a\xab\x0e\x1a\x58\x47\xe5\x86\xaf\x34\xc2\xc8\xa3\x7d\x59\xef\xb6\xde\xe4\xcf\x06\xba\x78\xa7\xa1\x06\x76\x38\xb8\x98\x6d\x96\xfd\x2d\xd9\xd7\x21\x39\xbe\xb4\xb5\xfc\x05\x18\x15\xe3\x1b\x90\x22\x7e\x03\x25\xd3\xf1\x15\x74\x0b\x15\xa7\x60\xdc\x30\x7e\x06\x6e\xde\xf1\x2b\x38\xb7\xa7\x6b\xfc\x12\x1a\x8f\x88\xcf\xab\x0a\xfa\x75\x5c\x9d\xbd\x80\x22\xba\xe9\x45\x0c\x32\x18\xa3\x81\x92\x57\x13\xc1\xae\x26\x4f\xcc\x11\x88\x82\x92\xe9\x37\x7c\xcb\xe4\x4e\x4f\x36\xb4\x9c\x08\xa9\x27\x4b\xc6\xc4\xa4\xe9\x2a\x60\xbf\x9c\x1a\xe1\x4f\x73\x46\xd5\x7d\x25\x94\xc6\xe4\x26\x64\x13\x42\xba\x81\x9b\x83\xb3\x83\x20\x0d\x33\x1b\xdb\x2d\xa5\x3c\x1c\xa6\x02\x87\xe1\x31\x87\xf0\xa4\xc0\x90\xdd\x46\xf7\x9a\xce\x42\x2a\x7b\xfe\x9b\xba\xdc\x47\xb9\x80\xef\x0e\xbd\x1e\x51\x9f\xc0\x9e\x08\x96\xa0\xaa\xa6\x5e\xa4\x31\xa2\x04\x19\x39\xe0\xba\xe9\x9c\x76\x8f\xb1\xac\xe5\x6b\xbc\x17\x44\x56\x86\x3b\x1d\xe3\xf6\xcd\x7a\xea\x7f\x89\x79\x27\x21\x25\xbc\xaa\x10\xb6\x0d\x10\x0a\x4b\x13\x6f\x77\x64\x3a\x87\x15\x39\x99\x27\xbd\xca\x6f\x17\x86\x34\x0c\x91\xc5\xd2\xda\xd5\x4f\x97\x84\x46\xa9\x14\x29\xd5\x68\x89\x63\xc3\x04\xcb\x1a\x17\x86\x6b\x84\x7b\xe5\xa0\x5d\xb7\xe9\xae\x09\xad\x25\xca\x71\xb2\x23\xd3\x59\x1b\xda\x18\x69\x98\x13\x96\xb8\x8d\x45\xc9\xd2\xce\x2a\x79\xf0\x60\xf5\x15\x4b\x30\x0d\x43\x7a\xb6\x5a\x44\x6a\x27\x10\x4e\xec\x80\x1d\x57\x45\x5d\xe6\xe1\x34\xf0\xfa\x21\x7c\x85\x52\x42\x88\x6f\x84\x66\xfd\x7d\x18\xd2\xce\x63\x0c\x2d\x3f\x1c\xa6\x29\x0e\xc3\x51\x9e\x9e\x24\x18\x8a\xb0\x2b\x62\x2a\xe7\x31\x67\x49\x7d\x67\x39\x76\x95\xd4\x77\x15\xe3\x28\x46\xce\xa0\x4a\xae\x83\xc8\x6a\x27\x88\x76\xc1\x8e\x2a\x45\x6f\x08\xf3\x8b\x63\xbc\xaf\x54\x24\xd8\xb5\x7e\xc3\xd3\x8b\x91\xe6\x90\xd9\x7f\x8f\x0c\x1b\xa2\x6a\x6d\x6b\xf9\xb2\xb6\xe2\xc9\xdc\x5a\x61\x08\xfe\x7a\x8e\xbb\xa6\xc4\x3c\x11\x5f\x0d\x09\x12\xf1\xe0\x01\x66\x67\xe2\x64\xbe\x20\x2d\xee\x4c\x2c\x92\xa5\x3b\x66\xcd\x88\x6e\xfe\x18\x4c\xda\xd8\xac\xda\xe1\xb0\x3b\x1c\x4a\xb4\xc6\x15\x64\x5e\xeb\x48\xed\xbc\x9e\x56\xa7\x72\x44\x8b\x22\xbf\x41\x5d\x86\x69\x75\xc7\x15\xa8\x48\x73\x9d\x33\x12\x2c\x95\xbc\x2a\x99\x0a\x40\x45\xf5\x63\xdd\x5b\x15\x97\xe6\x58\x54\x11\x55\xeb\x4b\xe3\xe8\x2a\xba\x64\xaa\xe4\x52\x90\x20\xe8\xbe\x94\x8e\x48\x0a\xb2\x35\xb4\x59\xd6\x74\x20\xec\x77\x29\x52\xe6\x1e\x56\x2b\xfb\xd7\xb5\x2a\x7a\x34\x0e\xf4\x28\xcf\x1b\x68\x69\xc1\x6c\xcb\xb5\x7d\x28\x14\x33\x05\x41\x8f\xa7\x86\xbd\x10\x69\x5f\x56\xde\x8a\xf0\x97\xd0\x39\x8b\xa9\xbd\x94\xed\x09\x9a\x9c\xd2\xc7\x1f\x85\xd8\x42\xc9\x94\x95\x65\x43\x3c\xe1\x2e\xc8\x96\xbb\xc2\xc4\x78\x1b\x61\x4d\xde\x7a\x95\x91\xa3\x72\x37\xf8\x34\xb0\xb8\x4d\xc6\xd5\xfd\x06\xb1\xa4\xb7\x0c\xb1\xdb\xd2\xf2\xe2\x78\x90\xc9\x6c\x70\x14\x1d\x35\x00\xd1\xd0\x85\x53\x22\xd0\x0c\x83\x22\x02\x7d\x86\xeb\x1a\x59\x9a\x63\x4b\x5c\x46\x8f\x5e\x3e\x3d\x1c\x82\x28\xf2\xfa\x86\xbc\x91\xea\x28\x87\xcd\x5e\xdd\xb5\x53\x4d\x40\x5b\xf1\xb5\x6d\x20\x42\x3a\xe8\xf4\x35\x13\xde\xa7\x71\x1a\x09\xd8\xda\xcf\xc2\x7e\x66\xe6\xb3\xea\xf5\xfc\x7a\x9d\x3c\x50\x84\xd5\xb2\x4b\x90\xc6\x01\x4b\x32\x4b\xca\xaf\x54\xb3\x7f\x4a\x53\x6c\xc8\xb3\x72\x41\x96\x48\x03\x47\x0c\x14\x94\x6d\x9f\x77\x9f\xa2\x4e\x98\x26\xb3\x44\x7f\x25\x1b\x4e\xed\x38\xf5\xc2\x94\xd5\x89\xa8\x75\x43\x69\xc4\x4c\x0a\x02\xdb\xfe\x4c\x14\x99\x25\xaa\x63\x56\x8e\x59\x2d\x22\x47\x97\xb4\xdc\x5b\x6c\x1b\x16\x0c\x57\x50\x20\xfb\xde\xc1\x55\xad\x4e\x87\xc3\x81\x45\x4b\x5a\xb2\xb7\xaf\x9e\xe1\xbd\x22\x8d\xdd\xca\x36\x9c\x8f\xa9\x57\x9b\x9f\x12\x6e\x3b\xdd\x25\x4e\x8c\xc2\xa7\xe6\x23\x32\x63\x50\x1c\xa3\xd6\x04\x14\x83\x45\xa4\xa8\x7e\xd8\x22\xe1\xf5\x50\x41\x98\xf3\xc5\x64\x5f\x65\xa7\x4d\x6b\x44\xdb\x68\x48\x1a\x38\x69\xa6\x51\x55\x90\x19\x17\x6a\x95\xdc\x60\x24\x6d\xa6\xdb\xbc\xd9\x40\x69\xc4\x31\x12\xbd\xe4\x7e\xe9\xd7\x19\x7b\xa7\x68\xdc\x58\x02\x02\x63\x86\x93\x9d\xca\x83\xb8\x35\x89\xc9\xda\xcd\xde\x50\x11\x45\x7b\x93\xeb\xc7\xae\xfe\x01\x5b\xff\xc4\x4d\x1d\x94\x51\x4d\x63\x51\xf5\x16\x39\xf5\x12\xc2\xd4\x5b\xbf\x34\x72\x29\x5c\xdd\x41\x2f\x7a\x73\xaa\x12\xdd\x2c\x80\x49\xef\x5b\x27\xae\x1f\x4c\x25\x57\xcf\xcc\x66\xff\xdd\x94\x17\xa4\x5b\x46\x48\x5d\xf1\x22\x70\x6d\xa5\xb4\x69\x0e\xd8\x63\xa8\xd7\x69\x6e\xc7\xf6\xa7\x8e\x3c\xdf\x5b\x61\x14\x14\x01\xc6\x91\x66\xd7\xfa\xb1\x14\x9a\x09\x4d\x82\x5c\x52\x13\x81\xa2\x28\x0a\x5a\xc5\x46\x1d\xce\xed\x29\x1b\x68\xee\x5a\x99\x55\x6f\x31\x73\xdc\x1c\x9d\xbd\xf6\x43\x8b\x4f\x31\xaa\x57\xaf\x69\x5d\x99\x05\x68\x88\xb9\xd0\x4a\x9a\xc3\x62\xd0\xce\x18\xcb\x91\x95\x6d\x01\x4a\xe3\x0c\x75\x7f\x2a\xd6\x90\xea\xeb\x98\xb5\x15\x86\x3d\xa3\xea\xd6\x4f\xbc\x03\xbd\x61\x22\xa6\x60\x4f\xfc\xb8\xac\xdf\x0e\x05\xf5\x6c\x02\xb0\xfd\xa4\x38\x30\x4c\x41\xfb\xe6\xa5\x9d\xf8\x05\x46\xbd\xf0\x61\x4a\x56\x64\x12\xc0\xde\x56\x07\x59\x37\xd9\x7c\xb7\x39\xb6\x6e\x4b\x66\x28\x64\xdd\x6b\x23\x16\x6e\x1d\x8c\xd8\x76\x9e\xbf\xd5\x70\x47\x26\x9c\xe7\x09\xbc\x67\x44\x80\x8c\x52\x7d\x4d\x18\xb4\x7a\x98\xe2\x34\x0c\xd5\x94\x10\x7f\xc2\xd8\x5b\x42\xa3\x0a\x48\x7c\x38\x34\xb3\x30\xe2\xfc\x15\xea\xad\x56\xe5\xe6\xdb\xf6\x3a\x1b\xcf\x3c\x72\x8a\x56\x29\x83\x06\xe9\x3a\x8f\x26\x7f\xb2\xfe\x70\x54\x1f\xba\x8a\xbc\xe9\x33\xb8\x0c\xc5\x36\x31\x91\x77\x38\xd9\x60\xb5\xaf\x77\x47\xac\x89\xac\x5c\x71\xbe\x66\x1a\xb5\x07\xc6\x8a\x99\x14\xee\x6f\x9f\xec\x75\xf5\x69\xb9\x2b\x98\xba\xe4\xa5\x54\xe5\xdf\x60\xbf\x65\x7a\x23\xb3\x38\x58\x33\x1d\x54\xb8\xed\x31\xea\xe8\x5d\x69\xc4\xd7\x10\x46\xbe\x7e\xa9\xe4\x96\x97\x2c\x32\xa9\x1f\x8b\xb6\xb4\x30\xc0\x71\xb9\x9f\xfe\xed\x01\x13\xa9\xcc\xd8\xdb\x57\x4f\x1f\x37\xae\x67\x5b\x18\x1f\x1a\x0d\xe3\x0e\xb8\x6f\x9a\x7a\xdd\x76\xd0\x15\xae\xb0\xeb\x6f\xf6\xce\x5a\x63\x03\x99\xd7\xfd\x4e\x13\x06\x1c\x59\x9d\xa4\xde\x5d\x6d\xb7\x2b\x94\xd9\x95\xec\xad\xc2\x48\x1d\x6e\x44\x83\x8e\x34\x55\x6b\xd6\xb6\x09\x7a\xb1\xb0\x16\x51\x87\xc1\x9a\x12\x74\xdb\x2e\x6e\x07\x7c\xe7\x02\x01\xc6\x95\xef\x4d\xab\x2e\xbf\x84\x34\x92\xb6\xd1\x4c\x56\xbe\x3e\x20\xd0\xdc\xf8\xd8\xdf\x93\x8b\xd4\x49\x88\x3a\x4a\x42\x6c\xdb\x86\xec\xed\x82\xbe\x36\x8a\xb6\xae\x55\x9f\x24\x1a\x1a\x1f\x63\x44\xdd\xe9\x63\xac\xfa\x94\x8b\x52\x53\x91\xb2\x71\x4f\xd0\xd1\x73\xba\xbd\xc3\x1d\x3e\x9f\x7d\x4e\x08\x31\xc7\x0f\xd5\xbb\xf2\x74\xaf\x76\xc2\x36\xf5\xa7\xf3\x2a\x1e\x38\x66\xdf\x4f\x1a\x42\x1d\xd5\x4f\x9e\xbf\x30\xf2\xf5\xd0\x4f\xec\x34\x4c\x24\xc7\x15\x94\x9a\x2a\xdd\xea\xdc\x0a\x82\xe6\x1c\x6d\xb5\x17\x03\xed\x4d\xbd\xd8\x56\x5d\xc7\x53\x71\x2f\x17\xa0\x35\x8e\xb8\xc7\x46\x19\x9a\xa7\x90\x65\xcf\x3e\x26\xc5\x79\x38\x9b\x79\x36\xea\x8d\xef\xaf\x61\xd2\xa8\x7c\x45\x95\x40\x0d\x39\x34\x0f\x6f\xd8\xb5\xee\x4c\xa4\x8f\x4c\xe4\xa6\x62\xdf\x20\x18\x13\xc9\xe2\xef\xb4\xd0\xc7\x19\xe8\x6e\xef\xb9\xa7\x79\x3e\xff\x1f\x36\x4f\x95\xf4\x3a\x48\xfd\x82\xdb\x8c\xab\xeb\x02\x7d\xe4\xbd\xfc\x87\xf3\x7d\x41\xb7\xcc\x66\xfb\x67\xb3\x05\xa4\xee\xa5\x8a\xfb\x3e\xef\x15\x00\xf4\x9e\x49\x4f\xc6\x2f\x4d\xda\x93\xe6\xb4\x2c\x8d\x0e\x24\x48\xb9\x4a\x73\x36\x59\xae\x4f\x14\xcb\x26\xe5\x25\xcb\x35\x3b\xf9\x7c\xb9\x4d\xe5\xc3\xbb\xb3\xa0\x0f\xe7\x3f\xcb\x3f\x60\x52\x6b\xc5\x98\xf8\x63\xa7\x75\xdf\x04\xf1\x03\xd3\xba\x99\x2c\x73\x2e\x2e\x4c\xc9\xfa\x87\x4e\x6f\xe5\x4f\xcf\xbb\x4d\xc2\xdc\x95\x01\x1b\xae\xaa\x3b\xa6\xbd\xdc\x69\x2d\xc5\x51\x72\x6b\x39\x83\xee\x14\xa2\x18\x09\x08\xd2\x9c\xa7\x17\x01\x28\x0c\xc2\x57\x54\xf0\x94\x2d\xf5\x1f\x60\xf7\x6e\xbc\xa2\x3f\x9e\xaf\x71\x7e\xb7\xc6\x26\xfa\xfc\x5d\x0a\xcb\xe2\x7f\xa7\xbe\xeb\x7b\x3a\xe0\x2d\x8a\xa5\x1b\x96\x5e\xd4\x75\xca\x7d\xd4\x00\x11\x65\xbc\xa4\xcb\x9c\x65\x64\x3a\xfb\x07\xbd\x33\xeb\x15\x1a\x20\x81\xb7\x99\x74\xf4\xab\x54\x17\xdf\x72\xe5\xab\x34\xb6\xa5\x40\x75\xc0\x35\x46\xc1\x7f\xfe\x07\xd5\xf1\x24\x30\x89\xb1\x0f\xe7\x9e\x31\x95\x35\xe6\x4a\x0a\x7d\x62\x2f\xcd\x04\x10\x70\x4d\x73\x9e\x06\xe3\x44\x2b\xba\xe5\xf9\x4d\x00\xc1\x56\x0a\x59\x16\x34\x65\xc7\x84\xa9\xcc\xa5\x0a\x20\x58\x2b\x7a\x73\x8c\x5d\x4a\x95\x31\x75\x62\x7d\x28\xc8\xf9\x7a\xa3\x0d\xdd\x24\x93\x5a\xb3\x6c\x32\x2f\xae\x8f\x59\x0a\x9a\x99\x72\xaa\xe6\x99\x45\x5f\xb0\xed\xed\x44\x39\x5b\xe9\x00\x82\x2f\xef\x12\xa4\xcc\xb0\xb7\x11\x6d\xa9\x5a\x73\x71\xf7\x60\x35\x4d\x3d\xd6\xc9\x5d\x72\x9a\xb1\x1c\xd1\x5d\x05\x5a\x0b\x5a\x1a\x7e\x35\x04\xc8\xae\xfc\x6f\xaa\xfe\x30\xe4\xa6\xe6\x3a\xf6\x14\xbf\xf4\x7a\x8f\x91\x04\x7e\x2f\x1f\xdc\x1e\xf9\x20\x94\x40\x3b\xe9\xcf\xe4\xfa\x3b\x9e\xb3\x8f\xf5\xc3\x5c\xae\x87\x6e\x68\x68\x69\x80\x81\xf7\x28\xa9\x29\xe8\x36\x8a\xad\x48\x59\x37\x28\x1e\xbd\x7c\xfa\x20\xf0\x13\xbc\xe0\x41\x3b\x1b\xb3\x35\x1f\x04\x9f\xe6\x72\x1d\xfc\x9f\x43\xff\x53\x3a\x74\x0f\xe0\x9c\xf4\xc8\xc3\xa9\xf1\xf0\x63\x1f\x1c\x78\x38\x07\x8a\x01\xe9\xc6\x67\x0e\x87\x46\x00\x0e\xc3\xd2\x48\xf8\x48\x87\xc2\x61\x88\x1a\x57\xbc\xd7\xd6\xd9\x8c\x35\x7e\xeb\xf4\x93\x09\xad\x38\x2b\xdb\x2e\x6a\xf4\x44\x5c\x72\x25\x85\x29\x70\xb1\xeb\x0a\x73\x32\x4b\x78\xd7\x36\xe5\xae\xa1\xc9\x17\xe4\x1d\xd2\x50\xda\xae\x30\xef\x77\x85\x07\x1b\x4f\x9b\x63\x28\xc0\xc9\xfd\x9a\xc5\xfe\xd9\xc6\xc4\xe5\xfd\x8f\xe7\xe4\x1e\xfd\x64\x01\xee\x0d\x76\xaf\x7f\xec\x44\x1d\x0e\x6d\x6f\xd2\x76\x8f\x07\x06\x4a\xc7\x0c\xd4\x0e\x39\x66\xa3\xb6\xb5\x5c\xda\xd6\x32\xc7\x89\xb1\xda\xa9\xf9\xf0\x5a\xcb\xb5\x1d\x6d\x6b\x99\x37\xad\x65\xee\xcd\xb5\x6e\x29\xf3\x4e\xa1\x76\x05\x3e\xd0\x52\xbe\x23\x51\xa9\x9b\xcc\xbe\x97\xbc\x1b\x0d\xb0\xb0\x24\xcc\x16\x24\xb0\x23\xf5\xfd\xae\xbb\x56\x5a\xf5\x23\xac\x85\x6d\x8e\x4e\xf9\xe5\x30\xb8\x06\xff\x22\x26\xde\x7f\x01\x86\x72\x20\x24\x0b\x30\xd0\x1e\xcf\xae\x1f\x04\x4a\x08\xae\xa4\xca\x4e\x96\x8a\xd1\x8b\x00\x02\xfb\xf7\x84\xe6\xf9\x3f\x10\x07\xd4\x30\x0e\x08\xe0\x43\x40\xd9\x07\x94\x40\xbb\x48\x81\x74\xeb\x5b\xde\x9e\x5f\x9a\x3d\xdf\x98\xf5\xe8\x34\x5c\xda\x58\x31\xc2\xb6\x33\x6c\xed\x22\x0c\xf8\x28\xec\xee\x15\x0a\x5e\xb4\x2f\x5c\x93\x8f\xe9\x51\xf7\x3a\xa0\xee\x4b\xdd\x4b\xab\x60\x58\xdc\xf7\x5b\xd8\xdd\x4d\x9d\xb6\x6d\x39\xaf\xc6\x6e\xe3\x0c\x7a\xdd\xcd\x0d\xa9\xf6\x32\xe0\x19\x5f\x40\x7b\xcb\x7b\xcd\x74\x7d\x81\xfc\x9b\x9b\xa7\x19\x0a\x7a\x31\xa2\x3e\x5c\xf1\xe1\x80\x10\xeb\xbb\x51\x8d\xc1\x11\xcf\xc8\x28\x13\xb0\x7e\xda\x1d\xd9\x52\x34\xea\x91\xee\xed\x99\x1b\x5b\x4c\x15\x49\x45\xc5\x9a\x8d\x52\x28\x96\x55\xd1\x32\xdf\x8d\x63\x0d\xa2\x8a\x9a\x6a\x77\x40\xb2\xa4\xe9\xc5\x5a\xc9\x9d\xc8\x4e\x1c\x75\xce\xb7\xac\x1e\xd1\x55\xed\x1f\x62\x70\x83\xbb\xa2\xf5\xc3\xc2\xeb\xcc\xa0\x8a\x5c\xb5\x3b\x60\xc8\x78\x59\xe4\xf4\x26\xe6\x22\xe7\x82\x9d\xd8\xb6\x76\x72\xc5\x33\xbd\x89\x1f\xb2\x6d\xb2\x61\x86\xdf\x3e\xd6\x09\x87\xa2\x19\xdf\x95\xf1\x9c\x6d\x13\x77\x32\xc7\xb3\xe8\x21\xdb\x56\x91\xda\x0d\x35\x75\x62\xe6\xb3\xd9\x9f\x92\x3a\x63\x88\xbf\x2c\xae\x07\x82\xbe\x28\xae\xab\xa8\x2e\x74\x6e\x55\x26\x16\x52\xb0\x01\xe3\x67\xad\xa8\xd8\x65\x3e\xb4\xdc\xb8\xcc\xa7\x99\xd8\x17\xc5\x75\xe2\x52\x32\xfe\x3b\x8b\xe7\x5f\xde\x3a\x52\xbc\x91\x97\x4c\xf9\xe3\x19\xd3\x26\xce\x82\x57\x1b\xae\xdb\xb1\x7d\xd0\x50\xf4\x96\x72\xe1\x5e\x0b\x8c\x9b\x78\x95\xb3\xeb\xc4\x7c\x9c\x64\x5c\x31\xbb\x69\x63\x25\xaf\xaa\x48\x39\xe1\x43\xed\x6b\x6d\xed\x02\x64\x54\x5d\x0c\xb5\xec\x65\x61\x66\x41\x2a\xdb\x0b\xbe\x75\x0d\x8c\xf7\x9f\xd0\x9c\xaf\x45\x6c\x12\xae\xc4\x4b\x44\xe3\x36\x0d\xad\x4c\x54\x32\x1b\xe4\x23\x94\x48\x65\xbe\xdb\x8a\x64\x29\xaf\x4f\xca\x0d\xcd\xe4\x55\x3d\x5d\x76\x33\x99\x4d\x66\x93\xcf\xc6\xd6\xbc\xe7\x11\xfe\x4c\x5e\xc9\xa5\xd4\x72\x52\x32\xc5\x57\xcd\xfa\x76\xe9\xed\xbc\xb8\x9e\x94\x32\xe7\x59\xb3\xc6\xf3\x99\x31\xfd\x52\x6a\x2d\xb7\x27\x05\x15\x2c\xbf\xf7\x8e\x48\xbc\xec\x33\x36\x69\x65\xe2\xa7\x9a\x3d\x88\x93\xef\x40\xcd\xc4\xbf\x18\x4c\xbc\x35\x61\xa3\x6c\x3d\x29\x23\xde\x57\xbc\x8f\xb5\x63\xf5\xf6\x42\xd3\x85\x1a\xe8\x41\x05\xdf\x52\x6b\xee\x7e\x70\x6b\x9b\x56\x0f\xcb\x89\xd9\xc2\x26\x63\x11\x2b\x2e\xb8\x66\xd5\xff\xbf\x60\x37\x2b\x45\xb7\xac\x9c\x8c\x33\xed\xbf\x98\xfd\x69\x2f\x0b\x9a\x72\x7d\x13\xcf\xaa\x2a\xe8\x1d\x78\x6d\x4c\xde\x30\x9a\xd9\xbb\x34\xf7\x79\x59\x59\xa7\x17\xef\xe0\x05\x14\x70\x09\xe7\x70\x03\xd7\x70\x01\xcf\xe1\x0d\x5c\xc1\x33\x78\x05\x8f\xe1\x25\xbc\x85\x27\xf0\x14\x1e\xc1\x6b\x78\x0f\xdf\xc1\x27\xf0\x2d\xfc\x04\xbf\xc2\x37\xf0\x3b\xfc\x19\xbe\x27\xbd\xd4\x18\x7e\xe8\xbe\x3f\x96\xdb\x2d\x15\x19\xfc\xd8\x81\x1e\xa9\x75\x19\xbd\x93\x5c\xa0\xc0\x24\x17\x3f\x93\x93\x39\x21\x1d\xfa\x15\xb3\x8d\xb2\xd3\xe0\xbf\xfe\xed\xdf\x83\x78\x08\x86\x5f\x08\x1a\xc2\xea\x66\xef\xa7\x73\xf6\xff\x70\xa4\xe5\x77\xfc\x9a\x65\xe8\x21\x86\xdf\x3c\xd2\xd7\x5a\x16\xb7\xd0\x75\x0d\xaf\xbf\x78\xbf\x79\x32\x07\xa8\x6d\x64\xd7\x27\xea\xe9\xae\x7b\xb9\x71\xba\x8c\xa9\xbd\x77\xf9\x57\xf2\x17\x64\x0e\x4d\x4d\xfe\xea\x6e\x47\xb4\xa2\x98\xbe\x4b\x96\xf7\xa2\xe4\x34\x8f\x57\x56\x96\xd0\x84\xd9\x77\x75\xa9\x26\xf5\x6b\x7c\x50\xfa\xa8\x62\x0f\xc3\x0c\xcd\xec\x6b\x4f\x7d\x54\xeb\x84\xe1\xd6\xe1\xb8\x87\xf3\x52\xe4\x30\x74\xd5\xc7\xc7\xd4\xe5\x1d\x50\xbb\x97\x6c\xf2\xb6\x64\xb1\x5f\xa5\x1b\xbe\xcd\xbc\x9f\x3c\xae\x31\xfa\x1e\xc3\xbb\x31\x01\xa6\x8a\x1c\x1b\x34\x75\x83\x16\xb7\xf0\x5c\x8e\xf1\x9c\x8f\x01\x6f\x06\x77\x0f\x94\xa9\xdf\xd1\xf5\x20\x25\x29\xe8\x48\xb7\x6f\x9b\xc5\x01\x5c\xf4\x67\x60\x06\x7f\xde\x03\xfd\x80\xe1\xcd\x31\xcd\x55\x0f\xf4\x23\x86\x67\x1f\xc8\xb5\x95\x0e\x43\xe5\x94\x7e\xf5\x01\x52\xa9\xc3\x50\x3a\xd2\xc7\xb7\xd8\x87\xeb\x30\xe4\x8e\xe4\xe5\x90\xa4\x25\x7a\x3b\x66\xaf\x27\x63\x96\x81\xa7\x7d\x21\xca\x6d\x40\xdb\xb4\x79\xd4\x43\xfd\x8c\xe1\xf5\x1d\x8e\xf2\x7e\x54\xfa\x77\xa3\xd2\x27\xf5\xfb\x1b\x3b\xca\x27\x3d\x92\x5f\x30\x7c\xdb\xe7\x29\x03\x0c\x3f\xdd\x31\xf0\xaf\xa3\x03\x7f\x33\x10\xa2\x65\xd1\x1b\xf5\xf7\x1e\xfe\x37\x0c\x7f\x3e\x1e\xd5\xaf\x7f\x78\xd3\x04\x09\x20\x98\x0d\x70\x0a\x82\xfa\x68\x0e\x20\x30\xe7\xf2\x31\xbe\x7f\x5a\x07\x10\x28\x79\x35\xa0\xba\x19\x8c\x70\xee\x57\xea\x6a\x77\xd4\x81\xbe\xf4\xf1\x6d\xde\x33\xa4\x7a\xe2\x53\xb9\x17\x3f\x75\xaa\x33\xa4\x7c\xef\x53\x9a\xec\xf9\x36\xc2\x5f\x7d\x42\x97\x9f\x0f\x49\xde\xf6\x64\x79\x89\xc1\x71\x1b\xdd\x7f\x15\xe4\xf6\xe7\xfd\x5b\x12\xc7\xe5\xa5\xd6\xd1\x16\x29\x57\xd9\xdf\x5d\x6b\xaa\x61\xad\xc9\x87\xb5\xa6\x80\x77\x43\xc0\x0b\x1b\xbe\xb6\xe8\xc5\xc8\x08\x02\x8a\x21\xe0\xb2\x0f\xb8\x84\xf3\x3e\xe0\x1c\x6e\xfa\x80\x1b\xb8\x1e\x02\x2e\x86\x80\xe7\x43\xc0\x9b\x21\xe0\x6a\x38\xca\xb3\x36\x08\x6d\xd1\xf9\xc8\xd4\xcf\xe1\x55\x1b\x7b\xc6\x29\x04\x3c\x6e\x43\x4f\xdb\x3a\x19\x50\xbc\x1c\x02\xde\xf6\x01\x6f\xe1\x49\x1f\xf0\x04\x9e\x0e\x01\x8f\x86\x2c\xaf\x87\x80\xf7\x7d\xc0\x7b\xf8\x6e\x08\xf8\x64\x08\xf8\x76\x28\xe3\xa7\x21\xe0\xd7\x3e\xe0\x57\xf8\x66\x08\xf8\x7d\x08\xf8\x73\xdd\xe5\xe2\x78\xff\xd7\x29\x21\xc8\x24\x0e\x1c\xe3\x30\x44\xba\xfe\x5d\x24\xaa\x93\x08\x8e\xb1\xbb\xcb\xe2\x7c\x53\x62\xf7\x33\x47\xd7\xe3\xfc\xde\xf0\x7e\x4f\xb8\x9f\x6d\x0d\x9a\x0f\x25\x7c\x8f\xc1\xfe\x6a\x10\xb9\x8c\xc2\x0d\x93\x36\xc3\x34\xd9\x45\x33\x8e\xef\xa1\xfe\x50\x3f\x18\x09\x3f\x74\x43\xd5\x89\xdc\x60\xb4\xe7\xf0\x83\xcf\xf4\xa3\x61\xfa\xb1\x63\xea\xa7\x7a\x03\xde\x2b\xf8\x11\x03\x1f\xa4\x37\xa7\x4a\x9f\x2a\x1d\x39\x5b\xc5\x08\x29\x4d\x4c\xbe\xd3\xcc\xb6\x76\xca\x57\x18\xc7\xc6\x47\x91\xaa\xd5\x52\xee\x67\x85\x9e\xbc\x3a\x25\x3a\x95\xfa\x54\x7a\xf2\xa4\x26\x5b\x4f\x9e\xef\xc2\x38\x36\x4e\x8d\x64\x2d\x52\x1e\x89\xf4\x32\xa9\x53\x6e\xfe\x75\x62\xb9\x26\x1b\xcf\xa8\xb5\xdf\xbf\xc4\x38\x36\xdb\x00\xf1\x5a\x26\x6f\x64\x76\x26\xfb\xd9\x98\xac\xce\x81\xf9\x78\x0e\x3c\x04\x0f\xec\xf8\x08\x7e\xf6\x05\xfe\x62\x04\xfe\x42\xd0\x90\xeb\x96\xec\x77\x20\xec\x13\xf8\xc5\x17\xf6\x9b\x11\xf6\x9b\x27\xec\x8e\x3c\x7a\x20\xe9\x77\xf8\xed\xf6\x97\xb4\xd6\xeb\xad\xf3\x65\xa8\x0d\x37\x19\x6a\xe3\x4a\x86\xda\x00\x92\x21\xfc\x8f\xdd\xd4\xd3\x78\x9f\x33\x3d\x61\xc4\xfd\x0c\xd9\xbb\x11\xe2\xfd\xba\x07\x75\x48\xff\x9a\x4a\x54\xff\x40\xd3\xa1\x19\xb2\xd7\x71\x1e\xb2\xcf\x70\x95\x1c\xd3\xda\x6b\x30\x86\x90\x21\xfc\x4f\x7c\x0f\xee\xc5\xf0\x1e\xdc\x6d\x48\x83\xf2\x7e\x93\xd1\xb5\x17\x07\x65\xa6\x77\xb9\xb8\xff\xa3\xc3\xf6\x4d\x0b\xb4\x4f\x1d\xab\x77\xb3\x52\x55\xde\xff\x77\x04\x31\x17\x37\x5b\x8e\xe9\x0c\x57\xf6\xae\xde\x8b\x8f\xbe\xab\x27\x22\x85\x18\x4e\x04\xbb\x42\x02\x3d\xc4\x11\xc5\x68\xef\xcc\x15\xdf\xde\xde\xec\x6e\x71\x06\xd8\x5d\xd1\xde\x57\x15\xae\x16\x38\xf9\xef\x00\x00\x00\xff\xff\x55\x70\x02\x47\x35\x48\x00\x00")

func mainJsBytes() ([]byte, error) {
	return bindataRead(
		_mainJs,
		"main.js",
	)
}

func mainJs() (*asset, error) {
	bytes, err := mainJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "main.js", size: 18485, mode: os.FileMode(436), modTime: time.Unix(1546868750, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"index.html": indexHtml,
	"main.js": mainJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
	"main.js": &bintree{mainJs, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

